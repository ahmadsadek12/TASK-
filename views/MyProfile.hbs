<form action="/api/user/{{userData._id}}/update" method="POST">
  <h3>My Profile</h3>
  <div id="form">
    <input type="text" class="inputs" id="firstname" name="firstName" value="{{userData.firstName}}" required>
    <input type="text" class="inputs" id="lastname" name="lastName" value="{{userData.lastName}}"
      placeholder="Last Name" required>
    <input type="email" class="inputs" name="email" placeholder="Email" value="{{userData.email}}" disabled>
    <small>You can not change your email after signing up.</small>

    <div id="gender">
      <fieldset class="fieldsets" required>
        <legend id="genderp">Gender</legend>
        <input type="radio" id="male-radio" value="Male" name="gender" class="genders" onchange="toggleOtherInput()"
          {{#if userData.gender}}{{#if (eq userData.gender "Male" )}}checked{{/if}}{{/if}}>
        <label for="male-radio" id="male-label" class="genders">Male</label>
        <input type="radio" id="female-radio" value="Female" name="gender" class="genders" onchange="toggleOtherInput()"
          {{#if userData.gender}}{{#if (eq userData.gender "Female" )}}checked{{/if}}{{/if}}>
        <label for="female-radio" id="female-label" class="genders">Female</label>
        <input type="radio" id="other-radio" value="Other" name="gender" class="genders" onchange="toggleOtherInput()"
          {{#if userData.gender}}{{#if (eq userData.gender "Other" )}}checked{{/if}}{{/if}}>
        <label for="other-radio" id="other-label" class="genders">Other</label>
      </fieldset>
    </div>
    <fieldset class="fieldsets" id="pronouns" hidden>
      <legend>Pronouns <label style="color: gray;">(Optional)</label>
        <div class="otherInput">
          <input class="genders" type="text" id="pronouns" name="pronouns" value="{{userData.pronouns}}"
            style="border-radius: 20px; text-align: center; font-size: 16px;" placeholder="Enter pronouns...">

        </div>
    </fieldset>
    <fieldset class="fieldsets">
      <legend>Country: </legend>
      <div class="otherInput">
        <select id="countryPicker" class="select2" style="width: 50%; margin-top: 20px; height: 20%;" name="country"
          value="{{userData.country}}">
          <option value="">Select a country</option>
        </select>
      </div>
    </fieldset>
    <fieldset class="fieldsets">
      <legend>Phone number:</legend>
      <input type="tel" id="phoneNumberInput" class="intl-tel-input" value="{{userData.phoneNumber}}"
        name="phoneNumber" style="border-radius: 20px; font-size: 16px;"  />
    </fieldset>
    <div class="bottomBtns">
      <a class="buttons" style="margin-right: 10px; text-decoration: none;" href="/Main">Home</a>
      {{#ifEqual userData.userType 1}}
      <a class="buttons" style="margin-right: 10px; text-decoration: none;" href="/Experience">Bio & Experience</a>
      {{else}}
      {{/ifEqual}}
      <button type="submit" class="buttons" id="signup-button">Submit</button>
    </div>
  </div>
</form>
<script>
  $('.select2').select2();

  // Fetch country data from the REST API
  fetch('https://restcountries.com/v3.1/all')
    .then(response => response.json())
    .then(data => {
      // Convert the country data to the format expected by select2
      const countries = data.map(country => {
        return { id: country.cca2, text: country.name.common };
      });

      // Populate the select2 dropdown with the list of countries
      $('#countryPicker').select2({
        data: countries
      });
    })
    .catch(error => console.error(error));

  $(document).ready(function () {
    // Get userData.country value
    var userCountry = "{{userData.country}}"; // Use Handlebars syntax to get userData.country

    // Set selected option in Select2
    $('#countryPicker').val(userCountry).trigger('change');
  });


  // Initialize intl-tel-input
  const phoneNumberInput = document.getElementById('phoneNumberInput');
  const iti = window.intlTelInput(phoneNumberInput, {
    // Optional configuration options
    preferredCountries: ['lb'], // Specify preferred countries
    separateDialCode: false, // Show the country code in a separate input
    initialCountry: 'lb', // Set the initial country
  });
</script>